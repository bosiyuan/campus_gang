{"remainingRequest":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js!/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/views/user/children/Published.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/views/user/children/Published.vue","mtime":1652709970303},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/cache-loader/dist/cjs.js","mtime":1635870229118},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js","mtime":1635870232549},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/cache-loader/dist/cjs.js","mtime":1635870229118},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/vue-loader/lib/index.js","mtime":1635870230423}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3N1bnhpYW5jaGFvL0Rlc2t0b3AvXHU2QkQ1XHU0RTFBXHU4QkJFXHU4QkExL1x1N0EwQlx1NUU4Rlx1OEJCRVx1OEJBMS9cdTY4MjFcdTU2RURcdTVFMkVhcGkrd2ViL2NhbXB1cy1nYW5nLXdlYi1tYXN0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOwppbXBvcnQgeyBmb3JtYXREYXRlIGFzIF9mb3JtYXREYXRlIH0gZnJvbSAnQC91dGlsL2RhdGUnOwppbXBvcnQgeyBhZGRSZW1hcmsgfSBmcm9tICJAL2FwaS9yZW1hcmsvcmVtYXJrIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQdWJsaXNoZWQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDmmK/lkKbmmL7npLrlvLnlh7rlsYIKICAgICAgb3BlbjogZmFsc2UsCiAgICAgIGFjdGl2ZU5hbWVzOiBbJzEnLCAnMicsICczJ10sCiAgICAgIGRyYXdlck5hbWVzOiBbJzEnLCAnMicsICczJywgJzQnLCAnNSddLAogICAgICB0YXNrczogW10sCiAgICAgIGRyYXdlcjogZmFsc2UsCiAgICAgIHJlY2lwaWVudEluZm9ybWF0aW9uOiBbXSwKICAgICAgLy8g6KGo5Y2V5Y+C5pWwCiAgICAgIGZvcm06IHt9LAogICAgICAvLyDooajljZXmoKHpqowKICAgICAgcnVsZXM6IHt9LAogICAgICAvLyDlvLnlh7rlsYLmoIfpopgKICAgICAgdGl0bGU6ICIiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKCd1c2VyJywgWyd1c2VyJ10pKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5yZXRyaWV2ZURhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHJldHJpZXZlRGF0YTogZnVuY3Rpb24gcmV0cmlldmVEYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy4kZ2V0KCIvdGFzay9wdWJsaXNoZWQiLCB7CiAgICAgICAgaWQ6IHRoaXMudXNlci5pZAogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YS50YXNrKTsKICAgICAgICBfdGhpcy50YXNrcyA9IHJlcy5kYXRhLnRhc2s7CiAgICAgIH0pOwogICAgfSwKICAgIHJlY2VpdmVyOiBmdW5jdGlvbiByZWNlaXZlcih2YWwpIHsKICAgICAgY29uc29sZS5sb2codmFsKTsKICAgICAgdGhpcy5yZWNpcGllbnRJbmZvcm1hdGlvbiA9IHZhbC5hY2NlcHQ7IC8vIGNvbnNvbGUubG9nKHRoaXMucmVjaXBpZW50SW5mb3JtYXRpb24pCgogICAgICB0aGlzLmRyYXdlciA9IHRydWU7CiAgICB9LAogICAgdHJhbnNmb3JtOiBmdW5jdGlvbiB0cmFuc2Zvcm0odGltZSkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogICAgICByZXR1cm4gX2Zvcm1hdERhdGUoZGF0ZSwgJ3l5eXktTU0tZGQgaGg6bW0nKTsKICAgIH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbChpZCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJGRlbCgiL3Rhc2svIiArIGlkKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIucmV0cmlldmVEYXRhKCk7CgogICAgICAgIF90aGlzMi4kbm90aWZ5TXNnKCfmiJDlip8nLCByZXMuZGF0YS5tc2csICJzdWNjZXNzIik7CiAgICAgIH0pOwogICAgfSwKICAgIGNvbXBsZXRlVGFzazogZnVuY3Rpb24gY29tcGxldGVUYXNrKGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kbXNnYm94KHsKICAgICAgICB0aXRsZTogJ+aPkOekuicsCiAgICAgICAgbWVzc2FnZTogJ+ehruWumuaOpeWPl+S6uuWujOaIkOatpOS7u+WKoeS6huWQl++8nycsCiAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgYmVmb3JlQ2xvc2U6IGZ1bmN0aW9uIGJlZm9yZUNsb3NlKGFjdGlvbiwgaW5zdGFuY2UsIGRvbmUpIHsKICAgICAgICAgIGlmIChhY3Rpb24gPT0gJ2NvbmZpcm0nKSB7CiAgICAgICAgICAgIC8vIGluc3RhbmNlLmNvbmZpcm1CdXR0b25Mb2FkaW5nID0gdHJ1ZTsKICAgICAgICAgICAgaW5zdGFuY2UuY29uZmlybUJ1dHRvblRleHQgPSAn5omn6KGM5LitLi4uJzsKCiAgICAgICAgICAgIF90aGlzMy4kcHV0KCd0YXNrLycgKyBpZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgZG9uZSgpOwogICAgICAgICAgICAgIGluc3RhbmNlLmNvbmZpcm1CdXR0b25Mb2FkaW5nID0gZmFsc2U7CgogICAgICAgICAgICAgIF90aGlzMy4kbXNnKHJlcy5kYXRhLm1zZywgInN1Y2Nlc3MiKTsKCiAgICAgICAgICAgICAgX3RoaXMzLnJldHJpZXZlRGF0YSgpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGRvbmUoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHt9KTsKICAgIH0sCiAgICAvLyDor4Tku7fnlKjmiLcKICAgIHJlbWFyazogZnVuY3Rpb24gcmVtYXJrKCkgewogICAgICB0aGlzLm9wZW4gPSB0cnVlOwogICAgICB0aGlzLnRpdGxlID0gIua3u+WKoHJlbWFyayI7CiAgICB9LAoKICAgIC8qKiDmj5DkuqTmjInpkq4gKi8KICAgIHN1Ym1pdEZvcm06IGZ1bmN0aW9uIHN1Ym1pdEZvcm0odmFsKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIGFpZCA9IHZhbC5hY2NlcHQuaWQ7CiAgICAgIHZhciB0YXNraWQgPSB2YWwuaWQ7CiAgICAgIHZhciBwaWQgPSB2YWwucHVibGlzaC5pZDsKICAgICAgY29uc29sZS5sb2coYWlkLCB0YXNraWQsIHBpZCk7CiAgICAgIGFkZFJlbWFyayh7CiAgICAgICAgInN0YXIiOiB0aGlzLmZvcm0uc3RhciwKICAgICAgICAicmVtYXJrIjogdGhpcy5mb3JtLnJlbWFyaywKICAgICAgICAiYWNjZXB0SWQiOiBhaWQsCiAgICAgICAgInB1Ymxpc2hJZCI6IHBpZCwKICAgICAgICAidGFza0lkIjogdGFza2lkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXM0LiRtZXNzYWdlKCLmlrDlop7miJDlip8iKTsKCiAgICAgICAgX3RoaXM0Lm9wZW4gPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBleGl0OiBmdW5jdGlvbiBleGl0KCkgewogICAgICB0aGlzLm9wZW4gPSBmYWxzZTsKICAgICAgdGhpcy5yZXNldCgpOwogICAgfSwKICAgIC8vIOihqOWNlemHjee9rgogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLmZvcm0gPSB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgc3RhcjogbnVsbCwKICAgICAgICByZW1hcms6IG51bGwKICAgICAgfTsKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUodGltZSkgewogICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHRpbWUpOwogICAgICByZXR1cm4gX2Zvcm1hdERhdGUoZGF0ZSwgJ3l5eXktTU0tZGQgaGg6bW0nKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Published.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"content\">\n        <el-card class=\"box-card\">\n            <div slot=\"header\" class=\"clearfix\">\n                <span>已发布任务</span>\n            </div>\n            <el-card class=\"box-card\" v-for=\"item in tasks\" style=\"margin-top: 20px\">\n                <div slot=\"header\" class=\"clearfix\"\n                     style=\"display: flex; align-items: center; justify-content: space-between\">\n                        <span style=\"display: flex;align-items: center\">\n                            <el-tag :type=\"item.state == 0 ? 'danger':(item.state == 1 ? 'warning':'success')\"\n                                    style=\"margin-right: 5px\">{{item.state == 0 ? '待解决':(item.state == 1 ? '服务中':'已完成')}}</el-tag>\n                            {{item.taskTitle}}\n                        </span>\n                    \n                    <!-- 评价按钮 -->\n                    <el-button v-show=\"item.state == 2\"\n                    style=\"float: right; padding: 3px 0\" type=\"text\" @click=\"remark()\">订单评价</el-button>\n\n\n                    <el-button style=\"float: right; padding: 3px 0\" type=\"text\" v-show=\"item.state != 0\"\n                               @click=\"receiver(item)\">查看接受人信息\n                    </el-button>\n                    <template>\n<!--                        <i class=\"el-icon-edit\" style=\"cursor: pointer; color: #66b1ff\" v-show=\"item.state == 0\"/>-->\n                        <el-popconfirm title=\"确定取消任务吗？\" @confirm=\"cancel(item.id)\" v-show=\"item.state == 0\">\n                            <el-button style=\"float: right; padding: 3px 0\" type=\"text\" slot=\"reference\">取消任务\n                            </el-button>\n                        </el-popconfirm>\n                    </template>\n                </div>\n\n                <el-steps :active=\"item.state + 1\" finish-status=\"success\">\n                    <el-step title=\"发布成功\" :description=\"item.createTime | formatDate\"></el-step>\n                    <el-step title=\"服务中\" :description=\"item.orderTime ? transform(item.orderTime):'暂时没人服务'\"></el-step>\n                    <el-step title=\"完成时间\" :description=\"item.endTime ? transform(item.endTime):''\"></el-step>\n                </el-steps>\n\n                <el-collapse style=\"margin-top: 20px\" v-model=\"activeNames\">\n                    <el-collapse-item title=\"任务内容\" name=\"1\">\n                        <div>{{item.taskContext}}</div>\n                    </el-collapse-item>\n                    <el-collapse-item title=\"任务奖励\" name=\"2\">\n                        <div><i class=\"el-icon-money\" style=\"color: red;\"> {{item.reward}}元</i></div>\n                    </el-collapse-item>\n                    <el-collapse-item title=\"发布时间\" name=\"3\">\n                        <div>{{item.createTime | formatDate}}</div>\n                    </el-collapse-item>\n                </el-collapse>\n\n                <el-button type=\"primary\" style=\"float: right;margin:10px 0;\" @click=\"completeTask(item.id)\"\n                           v-show=\"item.state==1\">完成任务\n                </el-button>\n\n            </el-card>\n            <div style=\"text-align: center\" v-if=\"tasks.length == 0\">\n                <span><i class=\"el-icon-refresh-right\"></i>暂无发布任务</span>\n            </div>\n        </el-card>\n\n        <el-drawer\n                title=\"接受人信息\"\n                :visible.sync=\"drawer\"\n                direction=\"rtl\">\n            <div class=\"content_drawer\">\n                <el-card class=\"box-card\" v-if=\"recipientInformation != ''\">\n                    <el-collapse v-model=\"drawerNames\">\n                        <el-collapse-item title=\"姓名\" name=\"1\">\n                            <div>{{recipientInformation.username}}</div>\n                        </el-collapse-item>\n                        <el-collapse-item title=\"电话\" name=\"2\">\n                            <div>{{recipientInformation.phone}}</div>\n                        </el-collapse-item>\n                        <el-collapse-item title=\"学校\" name=\"3\">\n                            <div>{{recipientInformation.school.name}}</div>\n                        </el-collapse-item>\n                        <el-collapse-item title=\"所在系\" name=\"4\">\n                            <div>{{recipientInformation.dept.name}}</div>\n                        </el-collapse-item>\n                        <el-collapse-item title=\"所在班级\" name=\"5\">\n                            <div>{{recipientInformation.aclass.name}}</div>\n                        </el-collapse-item>\n                    </el-collapse>\n                </el-card>\n            </div>\n        </el-drawer>\n\n        <!-- 添加或修改remark对话框 -->\n        <el-dialog :title=\"title\" v-for=\"item in tasks\" :visible.sync=\"open\"  width=\"500px\" append-to-body>\n        <el-form ref=\"form\" :model=\"form\"  :rules=\"rules\" label-width=\"80px\" >\n            <el-form-item label=\"星级\" prop=\"star\">\n                <el-rate\n                    v-model=\"form.star\"\n                    show-text>\n                </el-rate>\n            </el-form-item>\n            <el-form-item label=\"评价内容\" prop=\"remark\">\n            <el-input v-model=\"form.remark\" placeholder=\"请输入评价内容\" />\n            </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n            <el-button type=\"primary\" @click=\"submitForm(item)\">确 定</el-button>\n            <el-button @click=\"exit\">取 消</el-button>\n        </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import {mapState} from \"vuex\"\n    import {formatDate} from '@/util/date';\n    import { addRemark, } from \"@/api/remark/remark\";\n\n    export default {\n        name: \"Published\",\n        data() {\n            return {\n                // 是否显示弹出层\n                open: false,\n                activeNames: ['1', '2', '3'],\n                drawerNames: ['1', '2', '3', '4', '5'],\n                tasks: [],\n                drawer: false,\n                recipientInformation: [],\n                // 表单参数\n                form: {},\n                // 表单校验\n                rules: {\n                },\n                // 弹出层标题\n                title: \"\",     \n            };\n        },\n        computed: {\n            ...mapState('user', ['user'])\n        },\n        created() {\n            this.retrieveData()\n        },\n        methods: {\n            retrieveData() {\n                this.$get(\"/task/published\", {id: this.user.id}).then(res => {\n                    console.log(res.data.task)\n                    this.tasks = res.data.task\n                })\n            },\n            receiver(val) {\n                console.log(val)\n                this.recipientInformation = val.accept;\n                // console.log(this.recipientInformation)\n                this.drawer = true\n            },\n\n            transform(time) {\n                let date = new Date(time);\n                return formatDate(date, 'yyyy-MM-dd hh:mm');\n            },\n\n            cancel(id) {\n                this.$del(\"/task/\" + id)\n                    .then(res => {\n                        this.retrieveData()\n                        this.$notifyMsg('成功', res.data.msg, \"success\");\n                    })\n            },\n            completeTask(id) {\n                this.$msgbox({\n                    title: '提示',\n                    message: '确定接受人完成此任务了吗？',\n                    showCancelButton: true,\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    beforeClose: ((action, instance, done) => {\n                        if (action == 'confirm') {\n                            // instance.confirmButtonLoading = true;\n                            instance.confirmButtonText = '执行中...';\n                            this.$put('task/' + id)\n                                .then((res) => {\n                                    done();\n                                    instance.confirmButtonLoading = false;\n                                    this.$msg(res.data.msg, \"success\");\n                                    this.retrieveData()\n                                })\n                        } else {\n                            done();\n                        }\n                    })\n                }).catch(() => {\n                })\n            },\n            // 评价用户\n            remark(){\n                this.open = true;\n                this.title = \"添加remark\";\n            },\n\n            /** 提交按钮 */\n            submitForm(val) {\n                const aid = val.accept.id;\n                const taskid = val.id;\n                const pid = val.publish.id;\n                console.log(aid,taskid,pid);\n                addRemark(  { \n                                \"star\": this.form.star,\n                                \"remark\": this.form.remark,\n                                \"acceptId\": aid,\n                                \"publishId\": pid,\n                                \"taskId\": taskid,\n                            }).then(response => {\n                    this.$message(\"新增成功\");\n                    this.open = false;\n                });\n            },\n\n            // 取消按钮\n            exit() {\n            this.open = false;\n            this.reset();\n            },\n\n            // 表单重置\n            reset() {\n            this.form = {\n                id: null,\n                star: null,\n                remark: null,\n            };\n            },\n        },\n        filters: {\n            formatDate(time) {\n                let date = new Date(time);\n                return formatDate(date, 'yyyy-MM-dd hh:mm');\n            }\n        }\n    }\n</script>\n\n<style scoped lang=\"less\">\n    .content {\n        background: #FFf;\n        margin: 0 15px;\n        padding: 15px;\n    }\n</style>\n"],"sourceRoot":"src/views/user/children"}]}