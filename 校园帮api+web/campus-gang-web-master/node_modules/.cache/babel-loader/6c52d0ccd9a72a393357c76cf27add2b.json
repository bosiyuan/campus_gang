{"remainingRequest":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js!/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/request.js","dependencies":[{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/request.js","mtime":1652109432377},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/cache-loader/dist/cjs.js","mtime":1635870229118},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js","mtime":1635870232549}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKLy8g5bel5YW35YyFCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7Cgp2YXIgUXMgPSByZXF1aXJlKCJxdWVyeXN0cmluZyIpOwoKdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICAvLyDpu5jorqTot6/lvoQKICAvLyDmnI3li5nlmagKICAvLyBiYXNlVVJMOiAnaHR0cHM6Ly9hcGkuY2FtcHVzLnFuYW4udG9wJywKICAvLyDmnKzlnLDmuKzoqaYKICBiYXNlVVJMOiAnaHR0cDovL2xvY2FsaG9zdDo4MDgwJywKICAvLyB3aXRoQ3JlZGVudGlhbHM6IHRydWUsCiAgLy8g6LaF5pe25pe26Ze0CiAgdGltZW91dDogMjAwMDAKfSk7IC8vIGluc3RhbmNlLmRlZmF1bHRzLndpdGhDcmVkZW50aWFscz10cnVlCi8vIOa3u+WKoOivt+axguaLpuaIquWZqAoKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy/lvIDlkK8KICAvLyDlnKjlj5HpgIHor7fmsYLkuYvliY3lgZrkupvku4DkuYgKICAvL2dldOivt+axguaYoOWwhHBhcmFtc+WPguaVsAoKICBpZiAoY29uZmlnLm1ldGhvZCA9PT0gJ2dldCcgJiYgY29uZmlnLnBhcmFtcykgewogICAgdmFyIHVybCA9IGNvbmZpZy51cmwgKyAnPycgKyB0YW5zUGFyYW1zKGNvbmZpZy5wYXJhbXMpOwogICAgdXJsID0gdXJsLnNsaWNlKDAsIC0xKTsKICAgIGNvbmZpZy5wYXJhbXMgPSB7fTsKICAgIGNvbmZpZy51cmwgPSB1cmw7CiAgfSAvLyBpZiAoIWlzUmVwZWF0U3VibWl0ICYmIChjb25maWcubWV0aG9kID09PSAncG9zdCcgfHwgY29uZmlnLm1ldGhvZCA9PT0gJ3B1dCcpKSB7CiAgLy8gICAgIGNvbnN0IHJlcXVlc3RPYmogPSB7CiAgLy8gICAgIHVybDogY29uZmlnLnVybCwKICAvLyAgICAgZGF0YTogdHlwZW9mIGNvbmZpZy5kYXRhID09PSAnb2JqZWN0JyA/IEpTT04uc3RyaW5naWZ5KGNvbmZpZy5kYXRhKSA6IGNvbmZpZy5kYXRhLAogIC8vICAgICB0aW1lOiBuZXcgRGF0ZSgpLmdldFRpbWUoKQogIC8vICAgICB9CiAgLy8gICAgIGNvbnN0IHNlc3Npb25PYmogPSBjYWNoZS5zZXNzaW9uLmdldEpTT04oJ3Nlc3Npb25PYmonKQogIC8vICAgICBpZiAoc2Vzc2lvbk9iaiA9PT0gdW5kZWZpbmVkIHx8IHNlc3Npb25PYmogPT09IG51bGwgfHwgc2Vzc2lvbk9iaiA9PT0gJycpIHsKICAvLyAgICAgY2FjaGUuc2Vzc2lvbi5zZXRKU09OKCdzZXNzaW9uT2JqJywgcmVxdWVzdE9iaikKICAvLyAgICAgfSBlbHNlIHsKICAvLyAgICAgY29uc3Qgc191cmwgPSBzZXNzaW9uT2JqLnVybDsgICAgICAgICAgICAgICAgICAvLyDor7fmsYLlnLDlnYAKICAvLyAgICAgY29uc3Qgc19kYXRhID0gc2Vzc2lvbk9iai5kYXRhOyAgICAgICAgICAgICAgICAvLyDor7fmsYLmlbDmja4KICAvLyAgICAgY29uc3Qgc190aW1lID0gc2Vzc2lvbk9iai50aW1lOyAgICAgICAgICAgICAgICAvLyDor7fmsYLml7bpl7QKICAvLyAgICAgY29uc3QgaW50ZXJ2YWwgPSAxMDAwOyAgICAgICAgICAgICAgICAgICAgICAgICAvLyDpl7TpmpTml7bpl7QobXMp77yM5bCP5LqO5q2k5pe26Ze06KeG5Li66YeN5aSN5o+Q5LqkCiAgLy8gICAgIGlmIChzX2RhdGEgPT09IHJlcXVlc3RPYmouZGF0YSAmJiByZXF1ZXN0T2JqLnRpbWUgLSBzX3RpbWUgPCBpbnRlcnZhbCAmJiBzX3VybCA9PT0gcmVxdWVzdE9iai51cmwpIHsKICAvLyAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAn5pWw5o2u5q2j5Zyo5aSE55CG77yM6K+35Yu/6YeN5aSN5o+Q5LqkJzsKICAvLyAgICAgICAgIGNvbnNvbGUud2FybihgWyR7c191cmx9XTogYCArIG1lc3NhZ2UpCiAgLy8gICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKG1lc3NhZ2UpKQogIC8vICAgICB9IGVsc2UgewogIC8vICAgICAgICAgY2FjaGUuc2Vzc2lvbi5zZXRKU09OKCdzZXNzaW9uT2JqJywgcmVxdWVzdE9iaikKICAvLyAgICAgfQogIC8vICAgICB9CiAgLy8gfQoKCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgTlByb2dyZXNzLmRvbmUoKTsgLy/lhbPpl60KICAvLyDlr7nor7fmsYLplJnor6/lgZrkupvku4DkuYgKCiAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKfSk7IC8vIOa3u+WKoOWTjeW6lOaLpuaIquWZqAoKaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICBOUHJvZ3Jlc3MuZG9uZSgpOyAvL+WFs+mXrQogIC8vIOWvueWTjeW6lOaVsOaNruWBmueCueS7gOS5iAoKICByZXR1cm4gcmVzcG9uc2U7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIE5Qcm9ncmVzcy5kb25lKCk7IC8v5YWz6ZetCiAgLy8g5a+55ZON5bqU6ZSZ6K+v5YGa54K55LuA5LmICgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwoKdmFyIGdldCA9IGZ1bmN0aW9uIGdldCh1cmwsIHBhcmFtcykgewogIHJldHVybiBpbnN0YW5jZS5nZXQodXJsLCB7CiAgICBwYXJhbXM6IHBhcmFtcwogIH0pOwp9OwoKdmFyIHBvc3QgPSBmdW5jdGlvbiBwb3N0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGluc3RhbmNlLnBvc3QodXJsLCBRcy5zdHJpbmdpZnkocGFyYW1zKSk7Cn07Cgp2YXIgcHV0ID0gZnVuY3Rpb24gcHV0KHVybCwgcGFyYW1zKSB7CiAgcmV0dXJuIGluc3RhbmNlLnB1dCh1cmwsIFFzLnN0cmluZ2lmeShwYXJhbXMpKTsKfTsKCnZhciBkZWwgPSBmdW5jdGlvbiBkZWwodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gaW5zdGFuY2UuZGVsZXRlKHVybCwgewogICAgcGFyYW1zOiBwYXJhbXMKICB9KTsKfTsgLy8g5a+85Ye6Z2V05ZKMcG9zdOaWueazlQoKCmV4cG9ydCB7IGdldCwgcG9zdCwgcHV0LCBkZWwgfTs="},{"version":3,"sources":["/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/request.js"],"names":["axios","NProgress","Qs","require","instance","create","baseURL","timeout","interceptors","request","use","config","start","method","params","url","tansParams","slice","error","done","Promise","reject","response","get","post","stringify","put","del","delete"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP;;AAEA,IAAMC,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AAEA,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACxB;AACA;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,uBALe;AAMxB;AACA;AACAC,EAAAA,OAAO,EAAE;AARe,CAAb,CAAf,C,CAUA;AACA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkC,UAAUC,MAAV,EAAkB;AAChDV,EAAAA,SAAS,CAACW,KAAV,GADgD,CAC9B;AAClB;AACA;;AACA,MAAID,MAAM,CAACE,MAAP,KAAkB,KAAlB,IAA2BF,MAAM,CAACG,MAAtC,EAA8C;AAC1C,QAAIC,GAAG,GAAGJ,MAAM,CAACI,GAAP,GAAa,GAAb,GAAmBC,UAAU,CAACL,MAAM,CAACG,MAAR,CAAvC;AACAC,IAAAA,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACAN,IAAAA,MAAM,CAACG,MAAP,GAAgB,EAAhB;AACAH,IAAAA,MAAM,CAACI,GAAP,GAAaA,GAAb;AACH,GAT+C,CAUhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAOJ,MAAP;AACH,CAnCD,EAmCG,UAAUO,KAAV,EAAiB;AAChBjB,EAAAA,SAAS,CAACkB,IAAV,GADgB,CACC;AACjB;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CAvCD,E,CAyCA;;AACAd,QAAQ,CAACI,YAAT,CAAsBc,QAAtB,CAA+BZ,GAA/B,CAAmC,UAAUY,QAAV,EAAoB;AACnDrB,EAAAA,SAAS,CAACkB,IAAV,GADmD,CAClC;AACjB;;AACA,SAAOG,QAAP;AACH,CAJD,EAIG,UAAUJ,KAAV,EAAiB;AAChBjB,EAAAA,SAAS,CAACkB,IAAV,GADgB,CACC;AACjB;;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACH,CARD;;AAUA,IAAIK,GAAG,GAAG,SAANA,GAAM,CAAUR,GAAV,EAAeD,MAAf,EAAuB;AAC7B,SAAOV,QAAQ,CAACmB,GAAT,CAAaR,GAAb,EAAkB;AAACD,IAAAA,MAAM,EAANA;AAAD,GAAlB,CAAP;AACH,CAFD;;AAIA,IAAIU,IAAI,GAAG,SAAPA,IAAO,CAAUT,GAAV,EAAeD,MAAf,EAAuB;AAC9B,SAAOV,QAAQ,CAACoB,IAAT,CAAcT,GAAd,EAAmBb,EAAE,CAACuB,SAAH,CAAaX,MAAb,CAAnB,CAAP;AACH,CAFD;;AAIA,IAAIY,GAAG,GAAG,SAANA,GAAM,CAAUX,GAAV,EAAeD,MAAf,EAAuB;AAC7B,SAAOV,QAAQ,CAACsB,GAAT,CAAaX,GAAb,EAAkBb,EAAE,CAACuB,SAAH,CAAaX,MAAb,CAAlB,CAAP;AACH,CAFD;;AAIA,IAAIa,GAAG,GAAG,SAANA,GAAM,CAAUZ,GAAV,EAAeD,MAAf,EAAuB;AAC7B,SAAOV,QAAQ,CAACwB,MAAT,CAAgBb,GAAhB,EAAqB;AAACD,IAAAA,MAAM,EAANA;AAAD,GAArB,CAAP;AACH,CAFD,C,CAGA;;;AACA,SACIS,GADJ,EACSC,IADT,EACeE,GADf,EACoBC,GADpB","sourcesContent":["// 工具包\nimport axios from \"axios\"\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nconst Qs = require(\"querystring\");\n\nvar instance = axios.create({\n    // 默认路径\n    // 服務器\n    // baseURL: 'https://api.campus.qnan.top',\n    // 本地測試\n    baseURL: 'http://localhost:8080',\n    // withCredentials: true,\n    // 超时时间\n    timeout: 20000\n})\n// instance.defaults.withCredentials=true\n// 添加请求拦截器\ninstance.interceptors.request.use(function (config) {\n    NProgress.start();//开启\n    // 在发送请求之前做些什么\n    //get请求映射params参数\n    if (config.method === 'get' && config.params) {\n        let url = config.url + '?' + tansParams(config.params);\n        url = url.slice(0, -1);\n        config.params = {};\n        config.url = url;\n    }\n    // if (!isRepeatSubmit && (config.method === 'post' || config.method === 'put')) {\n    //     const requestObj = {\n    //     url: config.url,\n    //     data: typeof config.data === 'object' ? JSON.stringify(config.data) : config.data,\n    //     time: new Date().getTime()\n    //     }\n    //     const sessionObj = cache.session.getJSON('sessionObj')\n    //     if (sessionObj === undefined || sessionObj === null || sessionObj === '') {\n    //     cache.session.setJSON('sessionObj', requestObj)\n    //     } else {\n    //     const s_url = sessionObj.url;                  // 请求地址\n    //     const s_data = sessionObj.data;                // 请求数据\n    //     const s_time = sessionObj.time;                // 请求时间\n    //     const interval = 1000;                         // 间隔时间(ms)，小于此时间视为重复提交\n    //     if (s_data === requestObj.data && requestObj.time - s_time < interval && s_url === requestObj.url) {\n    //         const message = '数据正在处理，请勿重复提交';\n    //         console.warn(`[${s_url}]: ` + message)\n    //         return Promise.reject(new Error(message))\n    //     } else {\n    //         cache.session.setJSON('sessionObj', requestObj)\n    //     }\n    //     }\n    // }\n\n    return config;\n}, function (error) {\n    NProgress.done();//关闭\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\ninstance.interceptors.response.use(function (response) {\n    NProgress.done();//关闭\n    // 对响应数据做点什么\n    return response;\n}, function (error) {\n    NProgress.done();//关闭\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nlet get = function (url, params) {\n    return instance.get(url, {params});\n}\n\nlet post = function (url, params) {\n    return instance.post(url, Qs.stringify(params));\n}\n\nlet put = function (url, params) {\n    return instance.put(url, Qs.stringify(params));\n}\n\nlet del = function (url, params) {\n    return instance.delete(url, {params});\n}\n// 导出get和post方法\nexport {\n    get, post, put, del\n}"]}]}