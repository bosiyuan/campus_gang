{"remainingRequest":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js!/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/ruoyi.js","dependencies":[{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/ruoyi.js","mtime":1652161385949},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/cache-loader/dist/cjs.js","mtime":1635870229118},{"path":"/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/node_modules/babel-loader/lib/index.js","mtime":1635870232549}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sunxianchao/Desktop/毕业设计/程序设计/校园帮api+web/campus-gang-web-master/src/util/ruoyi.js"],"names":["parseTime","time","pattern","arguments","length","format","date","test","parseInt","replace","RegExp","toString","Date","formatObj","y","getFullYear","m","getMonth","d","getDate","h","getHours","i","getMinutes","s","getSeconds","a","getDay","time_str","result","key","value","resetForm","refName","$refs","resetFields","addDateRange","params","dateRange","propName","search","Array","isArray","sprintf","str","args","flag","arg","parseStrEmpty","mergeRecursive","source","target","p","constructor","Object","e","handleTree","data","id","parentId","children","config","childrenList","childrenListMap","nodeIds","tree","push","t","adaptToChildrenList","o","c","tansParams","keys","part","encodeURIComponent","subPart","blobValidate","text","JSON","parse"],"mappings":"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","sourcesContent":["\n\n/**\n * 通用js方法封装处理\n * Copyright (c) 2019 ruoyi\n */\n\n// 日期格式化\nexport function parseTime(time, pattern) {\n    if (arguments.length === 0 || !time) {\n      return null\n    }\n    const format = pattern || '{y}-{m}-{d} {h}:{i}:{s}'\n    let date\n    if (typeof time === 'object') {\n      date = time\n    } else {\n      if ((typeof time === 'string') && (/^[0-9]+$/.test(time))) {\n        time = parseInt(time)\n      } else if (typeof time === 'string') {\n        time = time.replace(new RegExp(/-/gm), '/').replace('T', ' ').replace(new RegExp(/\\.[\\d]{3}/gm), '');\n      }\n      if ((typeof time === 'number') && (time.toString().length === 10)) {\n        time = time * 1000\n      }\n      date = new Date(time)\n    }\n    const formatObj = {\n      y: date.getFullYear(),\n      m: date.getMonth() + 1,\n      d: date.getDate(),\n      h: date.getHours(),\n      i: date.getMinutes(),\n      s: date.getSeconds(),\n      a: date.getDay()\n    }\n    const time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, (result, key) => {\n      let value = formatObj[key]\n      // Note: getDay() returns 0 on Sunday\n      if (key === 'a') { return ['日', '一', '二', '三', '四', '五', '六'][value] }\n      if (result.length > 0 && value < 10) {\n        value = '0' + value\n      }\n      return value || 0\n    })\n    return time_str\n  }\n  \n  // 表单重置\n  export function resetForm(refName) {\n    if (this.$refs[refName]) {\n      this.$refs[refName].resetFields();\n    }\n  }\n  \n  // 添加日期范围\n  export function addDateRange(params, dateRange, propName) {\n    let search = params;\n    search.params = typeof (search.params) === 'object' && search.params !== null && !Array.isArray(search.params) ? search.params : {};\n    dateRange = Array.isArray(dateRange) ? dateRange : [];\n    if (typeof (propName) === 'undefined') {\n      search.params['beginTime'] = dateRange[0];\n      search.params['endTime'] = dateRange[1];\n    } else {\n      search.params['begin' + propName] = dateRange[0];\n      search.params['end' + propName] = dateRange[1];\n    }\n    return search;\n  }\n  \n  \n  // 字符串格式化(%s )\n  export function sprintf(str) {\n    var args = arguments, flag = true, i = 1;\n    str = str.replace(/%s/g, function () {\n      var arg = args[i++];\n      if (typeof arg === 'undefined') {\n        flag = false;\n        return '';\n      }\n      return arg;\n    });\n    return flag ? str : '';\n  }\n  \n  // 转换字符串，undefined,null等转化为\"\"\n  export function parseStrEmpty(str) {\n    if (!str || str == \"undefined\" || str == \"null\") {\n      return \"\";\n    }\n    return str;\n  }\n  \n  // 数据合并\n  export function mergeRecursive(source, target) {\n    for (var p in target) {\n      try {\n        if (target[p].constructor == Object) {\n          source[p] = mergeRecursive(source[p], target[p]);\n        } else {\n          source[p] = target[p];\n        }\n      } catch (e) {\n        source[p] = target[p];\n      }\n    }\n    return source;\n  };\n  \n  /**\n   * 构造树型结构数据\n   * @param {*} data 数据源\n   * @param {*} id id字段 默认 'id'\n   * @param {*} parentId 父节点字段 默认 'parentId'\n   * @param {*} children 孩子节点字段 默认 'children'\n   */\n  export function handleTree(data, id, parentId, children) {\n    let config = {\n      id: id || 'id',\n      parentId: parentId || 'parentId',\n      childrenList: children || 'children'\n    };\n  \n    var childrenListMap = {};\n    var nodeIds = {};\n    var tree = [];\n  \n    for (let d of data) {\n      let parentId = d[config.parentId];\n      if (childrenListMap[parentId] == null) {\n        childrenListMap[parentId] = [];\n      }\n      nodeIds[d[config.id]] = d;\n      childrenListMap[parentId].push(d);\n    }\n  \n    for (let d of data) {\n      let parentId = d[config.parentId];\n      if (nodeIds[parentId] == null) {\n        tree.push(d);\n      }\n    }\n  \n    for (let t of tree) {\n      adaptToChildrenList(t);\n    }\n  \n    function adaptToChildrenList(o) {\n      if (childrenListMap[o[config.id]] !== null) {\n        o[config.childrenList] = childrenListMap[o[config.id]];\n      }\n      if (o[config.childrenList]) {\n        for (let c of o[config.childrenList]) {\n          adaptToChildrenList(c);\n        }\n      }\n    }\n    return tree;\n  }\n  \n  /**\n  * 参数处理\n  * @param {*} params  参数\n  */\n  export function tansParams(params) {\n    let result = ''\n    for (const propName of Object.keys(params)) {\n      const value = params[propName];\n      var part = encodeURIComponent(propName) + \"=\";\n      if (value !== null && typeof (value) !== \"undefined\") {\n        if (typeof value === 'object') {\n          for (const key of Object.keys(value)) {\n            if (value[key] !== null && typeof (value[key]) !== 'undefined') {\n              let params = propName + '[' + key + ']';\n              var subPart = encodeURIComponent(params) + \"=\";\n              result += subPart + encodeURIComponent(value[key]) + \"&\";\n            }\n          }\n        } else {\n          result += part + encodeURIComponent(value) + \"&\";\n        }\n      }\n    }\n    return result\n  }\n  \n  // 验证是否为blob格式\n  export async function blobValidate(data) {\n    try {\n      const text = await data.text();\n      JSON.parse(text);\n      return false;\n    } catch (error) {\n      return true;\n    }\n  }"]}]}